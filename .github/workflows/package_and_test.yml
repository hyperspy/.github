name: Package & Test

on:
  workflow_call:
    inputs:
      library_name:
        description: 'The name of library, if different from repository name'
        # if empty string, the current repository name is used
        default: ''
        type: string
      module_name:
        description: 'The name of the module to test, if different from repository name'
        # if empty string, the current repository name is used
        default: ''
        type: string
      use_xvfb:
        description: 'Whether to install and setup xvfb and pyqt for testing'
        # if empty string, the current repository name is used
        default: false
        type: boolean
      POOCH_BASE_URL:
        description: 'Set the base url used by POOCH to fetch the data'
        # if empty string, the default base url is used
        default: ''
        type: string

env:
  PYTHON_VERSION: '3.11'

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    outputs: 
      REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: get repository name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Fetch tags upstream
        if: ${{ github.repository_owner != 'hyperspy' }}
        # Needs to fetch the tags from upstream to get the
        # correct version with setuptools_scm
        run: |
          git remote add upstream https://github.com/hyperspy/${{ env.REPOSITORY_NAME }}.git
          git fetch upstream --tags

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Display version
        run: |
          python --version
          pip --version

      - name: Install pypa/build pypa/twine
        run: |
          pip install build twine

      - name: Build a wheel and sdist
        run: |
          python -m build

      - name: Display content dist folder
        run: |
          ls -shR dist/
      
      - name: Run twin check
        run: |
          twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/*
          name: dist

  test:
    name: Test
    needs: package
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: ${{ needs.package.outputs.REPOSITORY_NAME }}
      LIBRARY_NAME: ${{ inputs.library_name }}
      MODULE_NAME: ${{ inputs.module_name }}
    steps:
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Ubuntu packages for Qt
        if: ${{ inputs.use_xvfb }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install qtbase5-dev
          sudo apt-get install libxkbcommon-x11-0
          sudo apt-get install libxcb-icccm4
          sudo apt-get install libxcb-image0
          sudo apt-get install libxcb-keysyms1
          sudo apt-get install libxcb-randr0
          sudo apt-get install libxcb-render-util0
          sudo apt-get install libxcb-xinerama0

      - name: Install pyqt
        if: ${{ inputs.use_xvfb }}
        run: |
          pip install pyqt5 PyQtWebEngine

      - uses: actions/download-artifact@v4

      - name: Display content working folder
        run: |
          ls -shR

      - shell: bash
        name: Get library name
        run: |
          if [ '${{ env.LIBRARY_NAME }}' = '' ]; then
            LIBRARY_NAME=${{ env.REPOSITORY_NAME }}
            echo "LIBRARY_NAME=${LIBRARY_NAME}" >> $GITHUB_ENV
          fi

      - shell: bash
        name: Get module name
        run: |
          if [ '${{ env.MODULE_NAME }}' = '' ]; then
            MODULE_NAME=${{ env.REPOSITORY_NAME }}
            echo "MODULE_NAME=${MODULE_NAME}" >> $GITHUB_ENV
          fi

      - name: Install distribution
        run: |
          # alpha release of mpmath breaks sympy
          # https://github.com/sympy/sympy/issues/26268
          pip install mpmath
          pip install --pre --find-links dist ${{ env.LIBRARY_NAME }}[tests]

      - name: Test distribution
        if: ${{ inputs.use_xvfb != true }}
        env:
          POOCH_BASE_URL: ${{ inputs.POOCH_BASE_URL }}
        run: |
          pytest --pyargs ${{ env.MODULE_NAME }}

      - name: Test distribution (with xvfb)
        if: ${{ inputs.use_xvfb }}
        run: |
          sudo apt-get install xvfb
          xvfb-run pytest --pyargs ${{ env.MODULE_NAME }}
