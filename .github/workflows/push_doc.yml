name: Push Documentation
# To prevent pwn PR requests (for example in PR preview, where documentation is pushed automatically)
# the documentation have to be built in a workflow that doesn't have access to any secrets and
# therefore the build and push workflow needs to be done separetely in two different workflows.
# See https://securitylab.github.com/resources/github-actions-preventing-pwn-requests for more information.

# The caller workflow needs to provide an access token with write access to the repository
# for example:
#   permissions:
#     # needs write permission to push the docs
#     contents: write

on:
  workflow_call:
    inputs:
      artefact_name:
        description: 'The name of the github artefact containing the doc'
        # if empty string, the current repository name is used
        default: 'doc_html'
        type: string
      repository:
        description: 'The repository, for example "hyperspy/hyperspy"'
        # if empty string, the current repository name is used
        default: ''
        type: string
      branch:
        description: 'The branch to push to, for example "gh-pages"'
        default: 'gh-pages'
        type: string
      output_path:
        description: 'The path where the doc will be written'
        default: '.'
        type: string
    secrets:
      access_token:
        description: 'The access token required to push a repository: "GITHUB_TOKEN" if same repository of personal access token for separate repository'
        # See https://github.com/ad-m/github-push-action/tree/master?tab=readme-ov-file#inputs

jobs:
  push_doc:
    # This build is to push changes to a repository
    name: Push to ${{ inputs.repository }}/${{ inputs.branch }}
    runs-on: ubuntu-latest
    env:
      # token to be used for checkout and push:
      # If provided use access_token otherwise fall back on the github token
      ACCESS_TOKEN: ${{ secrets.access_token || github.token }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }} 
          # Need to specify token here to enable pushing to other repository
          token: ${{ env.ACCESS_TOKEN }}

      - uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.artefact_name }}
          path: ${{ inputs.output_path }}

      - name: list files
        run: |
          ls

      - name: Git status
        run: |
          git status
          git status -s
          if [[ $(git status -s) ]]; then
            HAS_CHANGES='true'
          else
            HAS_CHANGES='false'
          fi
          echo "HAS_CHANGES=${HAS_CHANGES}" >> $GITHUB_ENV

      - name: Commit files
        # Skip when there is nothing to commit
        if: ${{ env.HAS_CHANGES == 'true' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git commit -m "Update docs build" -a

      - name: Push changes
        if: ${{ env.HAS_CHANGES == 'true' }}
        uses: ad-m/github-push-action@77c5b412c50b723d2a4fbc6d71fb5723bcd439aa
        with:
          github_token: ${{ env.ACCESS_TOKEN }}
          repository: ${{ inputs.repository }}
          branch: ${{ inputs.branch }}
